#基础版
git init			//git初始化
git add filename1 filename2	//暂存某些文件
git add .			//暂存所有修改的文件
git commit -m "提交版本1"	//提交版本
git status 			//查看版本状态
git diff filename               //查看某文件更改了那些
git reset --hard HEAD^          //返回上个版本
git reset --hard HEAD~10        //返回10个之前的版本
git reset --hard 版本号         //返回某个版本
git log                         //查看历史版本记录
git log --pretty=oneline        //单行查看历史版本记录
git reflog                      //查看版本穿越命令，可用于查找回退前的版本号
git checkout -- file  	 	//恢复文件到上次add或者commit状态，只能恢复还未被add的修改
git checkout 分支		//切换分支
git reset HEAD file		//取消文件add状态，注意--此命令会解除多次add的版本
git rm file		        //从版本库删除，然后commit完成删除，或者checkout -- 撤销删除（如果删除，记得先删除本地，再删除版本库）

#远程版
git remote add origin git@github.com:Shanguo/LearnGit.git 	//连接远程仓库，注意：第一次连接的远程仓库如果远程不是空的(新建的)那么先clone 才能push
git clone git@github.com:Shanguo/LearnGit.git                   //Clone
git push -u origin master					//提交到远程仓库,由于远程库是空的，第一次提交时使用-u参数，会把本地的master分支和远程的master分支关联起来
git push origin master
git push

#分支版
git branch dev 			//创建dev分支
git checkout dev 		//切换到dev分支
git checkout -b dev		//创建dev分支，并切换到dev
git branch			//查看当前分支
git merge dev			//把dev分支归并到本分支  Fast-forward是快进合并模式，相当于指针修改
git branch -d dev		//删除dev分支
git log --graph --pretty=oneline --abbrev-commit 	//查看分支合并情况
